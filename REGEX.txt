-----
REGEX
-----







---------------------------------------------------------------------------------------------------------------------------------------------------------------

RESOURCES
---------


https://regex101.com/                                                       --- онлайн редактор регулярных выражений
https://cheatography.com/davechild/cheat-sheets/regular-expressions/        --- таблица синтаксиса регулярных выражений





---------------------------------------------------------------------------------------------------------------------------------------------------------------






---------------------------------------------------------------------------------------------------------------------------------------------------------------

Regex (regular expression) syntax
---------------------------------


[abc]  		  - Один символ: a, b или c
[^abc]  	  - Любой отдельный символ, кроме: a, b или c
[a-z]  		  - Любой отдельный символ в диапазоне a-z
[a-zA-Z]    - Любой отдельный символ в диапазоне a-z или A-Z

^  		      - Начало строки (line)
$  		      - Конец строки (line)
\A  		    - Начало строки (string)
\z  		    - Конец строки (string)

.  		      - Любой отдельный символ
\s  		    - Любой символ пробела
\S  		    - Любой непробельный символ
\d  		    - Любая цифра
\D  		    - Любая не цифра
\w  		    - Любой символ слова (буква, цифра, подчеркивание)
\W  		    - Any non-word character
\b  		    - Граница любого слова

(...)  		  - Захватить все вложенное

(a|b)  		  - a or b
a?  		    - Ноль или один из
a* 		      - Ноль или более
a+  		    - Один или несколько

a{3}  		  - Ровно 3
a{3,}  		  - 3 или более
a{3,6}  	  - От 3 до 6

\b          - Любая граница слова (cat\b)

\.          - any symbol
\d          - any number

{2}         - count of same elements (\.\d{2}) (\.\d{1,2})
a+          - own or more (\n+)
*           - zero or more (\n *) (\n\s*) (no+!*) (0{6}) (0{6}\b) (0{3,}) (ba{3,}) (^hello) (^http://.+)

\s          - any whitespace
^           - start of line
$           - end of line (bye$) ($index.html) (^\$)

\w          - word character
[abc]       - single character of: a, b, or c ([$,])

()          - pattern (something)+ ((\d{1,2})\/(\d{1,2})\/(\d{4}))





---------------------------------------------------------------------------------------------------------------------------------------------------------------





---------------------------------------------------------------------------------------------------------------------------------------------------------------

--------
EXAMPLES
--------


Представление символов. Метасимвол.
-----------------------------------


/java/
------

java \ python ruby1.9 javascript c#




---




/javab/
-------

java \ python ruby1.9 javascript c#




---




/./
---

java \ python ruby1.9 javascript c#




---



/.y/
----

java \ python ruby1.9 javascript c#




---




/1.9/
-----

java \ python ruby1.9 javascript c#

java \ python ruby189 javascript c#

java \ python ruby1k9 javascript c#




---




/1\.9/
------

java \ python ruby1.9 javascript c#

java \ python ruby1d9 javascript c#




---



 /\\/
 ----

java \ python ruby1d9 javascript c#



---------------------------------------------------------------------------------------------------------------------------------------------------------------






---------------------------------------------------------------------------------------------------------------------------------------------------------------

Символьные классы
-----------------


/ [a-z]/
--------

java 11_34-1938 tab

new line




---




/ [0-9]/
--------

java 11_34-1938 tab

new line




---




/ [aj]/
-------

java 11_34-1938 tab

new line




---




/ [^aj]/
--------

java 11_34-1938 tab

new line




---




/ [aj-]/
--------

java 11_34-1938 tab

new line




---




/ \d/
-----

java 11_34-1938 tab

new line




---




/ \D/
-----

java11_34-1938tab

new line




---




/ \w/
-----

java 11_34-1938 tab

new line




---




/ \W/
-----

java 11_34-1938 tab

new line





---------------------------------------------------------------------------------------------------------------------------------------------------------------






---------------------------------------------------------------------------------------------------------------------------------------------------------------

Позиция внутри строки
---------------------


/java/
------

java




---




/java/
------

asdfjava asdf




---




/^java/
-------

java ruby clojurescript javascript




---




/java/
------

java ruby clojurescript javascript




---




/script/
--------

java ruby clojurescript javascript




---





/script$/
---------

java ruby clojurescript javascript




---




/a\b/
-----

java ruby clojurescript javascript




---




/a\B/
-----

java ruby clojurescript javascript




---




/\bj/
-----

java ruby clojurescript javascript




---




/\Bj/
-----

java ruby clojurescriptj javascript




---




/\Bj\B/
-------

java ruby clojurescriptj javascript





---------------------------------------------------------------------------------------------------------------------------------------------------------------






---------------------------------------------------------------------------------------------------------------------------------------------------------------

exercises
---------


/^support@hexlet\.io$/
----------------------

support@hexlet.io





---




/one|two|three/
---------------

one two three





---




/([a-z]{3}):\1/
---------------

Трех символов из класса a-z
:
Группы символов из первого условия




---




/^\w+@[a-zA-Z]{3,}\.[a-zA-Z]{2,5}$/
-----------------------------------

Часть до @ должна содержать только символы класса \w в количестве не менее одного
Часть после @ и до ., после которой начинается домен, должна содержать только буквы и быть не короче трех символов (например, hexlet)
Часть после . может содержать только буквы и быть от двух до пяти символов в длину (например, io)




---




/\(.+?\)/
---------

(
Хотя бы одного любого символа
)





---




/80(?=:[^a-z])/
---------------


80
: и один или более символов, не входящих в класс a-z

Используйте позитивный просмотр вперед.

// match
['80:8080, 80:!@#$'];

// not match
['80:', '80', '80:d123f'];





---





/(?(?<=code)\d{4}|____)/
------------------------


Строка содержит группу из четырех цифр, перед которой следует строка code
Строка содержит подстроку ____, перед которой нет строки code

// match
['code1234', '____'];


// not match
['code123', 'code____'];




---




/("|')python\1
ig/
--------------

Пример решения:

(\S+)@([a-z0-9.]+)
is




---





strong password
---------------

/(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[@$!%*#?~(&)+=^_-]).{8,}/




---




match links
-----------

/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)/






---------------------------------------------------------------------------------------------------------------------------------------------------------------






---------------------------------------------------------------------------------------------------------------------------------------------------------------














































































