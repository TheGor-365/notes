---------
REDIS CMD
---------


------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------
with systemctl
--------------

$ sudo systemctl start redis-server.service                                   --- to start Redis server
$ sudo systemctl status redis-server.service                                  --- to get status of Redis server
$ sudo systemctl stop redis-server.service                                    --- to stop Redis server
$ sudo systemctl restart redis-server.service                                 --- to apply the changes of config file (sudo nano /etc/redis/redis.conf)



------------------------------------------------------------------------------------------------------------------------------------------------------------









------------------------------------------------------------------------------------------------------------------------------------------------------------

------------
with service
------------

$ sudo service redis-server start                                             --- to start Redis server
$ sudo service redis-server status                                            --- to get status
$ sudo service redis-server stop                                              --- to stop Redis server
$ sudo service redis-server restart                                           --- to apply the changes of config file (sudo nano /etc/redis/redis.conf)



------------------------------------------------------------------------------------------------------------------------------------------------------------









------------------------------------------------------------------------------------------------------------------------------------------------------------

---------------------
fix rails start error
---------------------

$ sudo service redis-server stop
$ redis-server


---



$ redis-server --port 7000
$ redis-cli -p 7000


---


$ killall redis-server; redis-server



------------------------------------------------------------------------------------------------------------------------------------------------------------









------------------------------------------------------------------------------------------------------------------------------------------------------------



-----------------
key value storage
-----------------



127.0.0.1:6379> set session:1 120
OK

---

set ключ значение

---

127.0.0.1:6379> get session:1
"120"

---

127.0.0.1:6379> get session:N
(nil)

---

127.0.0.1:6379> exists session:1
(integer) 1
127.0.0.1:6379> exists session:N
(integer) 0

---

127.0.0.1:6379> del session:1
(integer) 1
127.0.0.1:6379> del session:N
(integer) 0

---


1, если ключ существовал, и он был успешно удален
0, если ключа не было, поэтому ничего не было удалено



-----------------------------------------


127.0.0.1:6379> set session:1 '{"user_id":120,"email":"test@test.com"}'
OK
127.0.0.1:6379> get session:1
"{\"user_id\":120,\"email\":\"test@test.com\"}"



-----------------------------------------


127.0.0.1:6379> JSON.GET session1 .user_id




-------------------------------------------------------------------------------------------------------------------------------------------------------------------------








-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

----
cash
----



127.0.0.1:6379> set user:33:deals_count 5
OK

---

127.0.0.1:6379> set user:33:deals_count 5 ex 120
OK

---

127.0.0.1:6379> ttl user:33:deals_count
(integer) 115

---

127.0.0.1:6379> get user:33:deals_count
(nil)

---

px - Время жизни количество_миллисекунд


-----------------------------------------

set user:33:deals_count 5 px 10000



-----------------------------------------


127.0.0.1:6379> pttl user:33:deals_count
(integer) 7484


-----------------------------------------

127.0.0.1:6379> del user:33:deals_count
(integer) 1


-----------------------------------------


127.0.0.1:6379> unlink user:1:deals_count user:2:deals_count user:3:deals_count
(integer) 1




-------------------------------------------------------------------------------------------------------------------------------------------------------------------------








-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

---------------------
online event counters
---------------------



INSERT INTO visits (url, count, date) VALUES ('hexlet.io/courses', 1, '2022-01-01') ON DUPLICATE KEY UPDATE count = count + 1



-----------------------------------------


127.0.0.1:6379> incr page:hexlet.io/courses:online_count
(integer) 1
127.0.0.1:6379> incr page:hexlet.io/courses:online_count
(integer) 2
127.0.0.1:6379> incr page:hexlet.io/courses:online_count
(integer) 3



---


127.0.0.1:6379> incrby page:hexlet.io/courses:online_count 27
(integer) 30



-----------------------------------------


127.0.0.1:6379> decr page:hexlet.io/courses:online_count
(integer) 29


---

127.0.0.1:6379> decrby page:hexlet.io/courses:online_count 19
(integer) 10



-----------------------------------------


127.0.0.1:6379> get page:hexlet.io/courses:online_count
"10"
127.0.0.1:6379> expire page:hexlet.io/courses:online_count 60
(integer) 1
127.0.0.1:6379> ttl page:hexlet.io/courses:online_count
(integer) 53
127.0.0.1:6379> del page:hexlet.io/courses:online_count
(integer) 1




-------------------------------------------------------------------------------------------------------------------------------------------------------------------------








-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------
storing lists with Lists
------------------------



127.0.0.1:6379> lpush user:14:recent_posts 10
(integer) 1
127.0.0.1:6379> lpush user:14:recent_posts 20 30
(integer) 3


---


lpush возвращает количество элементов в списке после вставки


-----------------------------------------


127.0.0.1:6379> lrange user:14:recent_posts 0 -1
1) "30"
2) "20"
3) "10"



-----------------------------------------


127.0.0.1:6379> lpop user:14:recent_posts
"30"
127.0.0.1:6379> rpop user:14:recent_posts
"10"



-----------------------------------------


127.0.0.1:6379> lrem user:14:recent_posts 0 120
(integer) 0
127.0.0.1:6379> lrem user:14:recent_posts 0 20
(integer) 1
127.0.0.1:6379> lrange user:14:recent_posts 0 -1
(empty array)



-----------------------------------------


127.0.0.1:6379> expire user:14:recent_posts 3600
(integer) 1
127.0.0.1:6379> ttl user:14:recent_posts
(integer) 3598





-------------------------------------------------------------------------------------------------------------------------------------------------------------------------








-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------
composite structures with Hashes
--------------------------------



127.0.0.1:6379> set user:56:email user@test.com
OK
127.0.0.1:6379> set user:56:phone '+7-111-111-11-11'
OK



-----------------------------------------


127.0.0.1:6379> set user:56:profile '{"email":"user@test.com","phone":"+7-111-111-11-11"}'
OK



-----------------------------------------


{
  "hello": {
    "en": "hello",
    "ru": "здравствуйте"
  },
  "bye": {
    "en": "bye",
    "ru": "пока"
  }
}



-----------------------------------------


127.0.0.1:6379> hset translates:hello en hello ru привет
(integer) 2
127.0.0.1:6379> hset translates:bye en bye ru пока
(integer) 2
127.0.0.1:6379> hset translates:name en name ru имя
(integer) 2



-----------------------------------------


127.0.0.1:6379> hset translates:hello ru здравствуйте
(integer) 0



-----------------------------------------


127.0.0.1:6379> hget translates:hello ru
"\xd0\xb7\xd0\xb4\xd1\x80\xd0\xb0\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb9\xd1\x82\xd0\xb5"



-----------------------------------------


127.0.0.1:6379> hgetall translates:name
1) "en"
2) "name"
3) "ru"
4) "\xd0\xb8\xd0\xbc\xd1\x8f"




-----------------------------------------


127.0.0.1:6379> hdel translates:bye ru
(integer) 1
127.0.0.1:6379> hgetall translates:bye
1) "en"
2) "bye"





-------------------------------------------------------------------------------------------------------------------------------------------------------------------------








-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

---------------------------------
checking for uniqueness with Sets
---------------------------------



127.0.0.1:6379> set page:/courses:user:22 1
OK
127.0.0.1:6379> set page:/courses:user:33 1
OK
127.0.0.1:6379> exists page:/courses:user:22
(integer) 1
127.0.0.1:6379> keys page:/courses:user:*
1) "page:/courses:user:33"
2) "page:/courses:user:22"



-----------------------------------------


127.0.0.1:6379> lpush page:/courses 22 33 44
(integer) 3
127.0.0.1:6379> llen page:/courses
(integer) 3



-----------------------------------------


127.0.0.1:6379> hset page:/courses 11 1 22 1 33 1
(integer) 3
127.0.0.1:6379> hlen page:/courses
(integer) 3



-----------------------------------------

Для записи значений используется команда sadd key member [member ...]:
----------------------------------------------------------------------


127.0.0.1:6379> sadd page:/courses 11 22 33 44
(integer) 4

---

127.0.0.1:6379> sadd page:/courses 22
(integer) 0



-----------------------------------------


Получить количество уникальных пользователей страницы можно с помощью команды scard key:
----------------------------------------------------------------------------------------


127.0.0.1:6379> scard page:/courses
(integer) 4



-----------------------------------------


Команда sismember key member проверяет, что пользователь посещал данную страницу:
---------------------------------------------------------------------------------


127.0.0.1:6379> sismember page:/courses 33
(integer) 1
127.0.0.1:6379> sismember page:/courses 12222
(integer) 0


-----------------------------------------


Удалить пользователя из набора можно командой srem key member [member ...]:
---------------------------------------------------------------------------


127.0.0.1:6379> srem page:/courses 44
(integer) 1
127.0.0.1:6379> smembers page:/courses
1) "11"
2) "22"
3) "33"



-----------------------------------------


3 страницы: /courses, /courses/java и /courses/php,получить уникальных пользователей, которые посетили 3 страницы, sinter key [key ...]:
----------------------------------------------------------------------------------------------------------------------------------------


127.0.0.1:6379> sadd page:/courses 1 2 3 4 5 6 7 8 9 10
(integer) 10
127.0.0.1:6379> sadd page:/courses/java 1 2 3 4 5 6 7
(integer) 7
127.0.0.1:6379> sadd page:/courses/php 5 6 7 8 9
(integer) 5
127.0.0.1:6379> sinter page:/courses page:/courses/java page:/courses/php
1) "5"
2) "6"
3) "7"





-------------------------------------------------------------------------------------------------------------------------------------------------------------------------








-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-----------
sorted sets
-----------



Чтобы добавить запись в лидерборд, используется команда zadd key score member [score member ...]:
-------------------------------------------------------------------------------------------------


127.0.0.1:6379> zadd leaderboard 100500 55
(integer) 1
127.0.0.1:6379> zadd leaderboard 500 22
(integer) 1
127.0.0.1:6379> zadd leaderboard 100 33
(integer) 1



-----------------------------------------


Если участник заработал какую-то сумму, то можно прибавить ее к рейтингу командой zincrby key increment member:
---------------------------------------------------------------------------------------------------------------


127.0.0.1:6379> zincrby leaderboard 500 22
"1000"




-----------------------------------------


127.0.0.1:6379> zrange leaderboard 0 2 REV
1) "55"
2) "22"
3) "33"



-----------------------------------------


Если требуется получить количество денег кроме идентификаторов пользователей, то добавляется параметр WITHSCORES:
-----------------------------------------------------------------------------------------------------------------


127.0.0.1:6379> zrange leaderboard 0 2 REV WITHSCORES
1) "55"
2) "100500"
3) "22"
4) "1000"
5) "33"
6) "100"




-------------------------------------------------------------------------------------------------------------------------------------------------------------------------








-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-----------
HyperLogLog
-----------



127.0.0.1:6379> sadd article:1 220.6.122.77 35.64.194.82 38.175.235.3
(integer) 3
127.0.0.1:6379> sadd article:2 220.6.122.77 140.45.246.108
(integer) 2
127.0.0.1:6379> sinter article:1 article:2
1) "220.6.122.77"



-----------------------------------------


Для записи данных в HyperLogLog используется команда pfadd key [element [element ...]]:
---------------------------------------------------------------------------------------



127.0.0.1:6379> pfadd article:1 4.218.89.25 255.194.94.209 81.64.119.92 226.110.217.208 68.199.143.222
(integer) 1
127.0.0.1:6379> pfadd article:2 14.193.144.176 132.231.108.228 81.64.119.92 226.110.217.208 68.199.143.222
(integer) 1
127.0.0.1:6379> pfadd article:3 4.218.89.25 255.194.94.209 81.64.119.92 225.109.160.131 85.83.185.103
(integer) 1


---

127.0.0.1:6379> pfadd article:1 4.218.89.25
(integer) 0



-----------------------------------------


Чтобы получить количество уникальных посетителей, используется команда pfcount key [key ...]:
---------------------------------------------------------------------------------------------


127.0.0.1:6379> pfcount article:1
(integer) 5
127.0.0.1:6379> pfcount article:2
(integer) 5
127.0.0.1:6379> pfcount article:3
(integer) 5



-----------------------------------------


Рассчитать количество уникальных посетителей нескольких страниц можно командой pfmerge destkey sourcekey [sourcekey ...]:
-------------------------------------------------------------------------------------------------------------------------


127.0.0.1:6379> pfmerge articles article:1 article:2 article:3
OK
127.0.0.1:6379> pfcount articles
(integer) 9



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------








-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

---------------
messages broker
---------------



127.0.0.1:6379> rpush queue:order:mail_notification '{"user_id":33,"order_id":12345}'
(integer) 1

127.0.0.1:6379> rpush queue:order:processing '{"user_id":33,"order_id":12345}'
(integer) 1



-----------------------------------------


127.0.0.1:6379> lrange queue:order:mail_notification 0 -1
1) "{\"user_id\":33,\"order_id\":12345}"

127.0.0.1:6379> lrange queue:order:processing 0 -1
1) "{\"user_id\":33,\"order_id\":12345}"



-----------------------------------------


Сервисы обработчики слушают очередь с помощью команды blpop key [key ...] timeout:


127.0.0.1:6379> blpop queue:order:mail_notification 10
1) "queue:order:mail_notification"
2) "{\"user_id\":33,\"order_id\":12345}"

127.0.0.1:6379> blpop queue:order:processing 10
1) "queue:order:processing"
2) "{\"user_id\":33,\"order_id\":12345}"



-----------------------------------------


127.0.0.1:6379> rpush queue:order:mail_notification '{"user_id":33,"order_id":12345}'
(integer) 1

127.0.0.1:6379> blmove queue:order:mail_notification queue:order:mail_notification:fallback LEFT RIGHT 10
"{\"user_id\":33,\"order_id\":12345}"





-------------------------------------------------------------------------------------------------------------------------------------------------------------------------








-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------
realtime chat pubpub
--------------------



Веб-сокет микросервис подписывается на события с помощью команды subscribe channel [channel ...]:
-------------------------------------------------------------------------------------------------


127.0.0.1:6379> subscribe messages
Reading messages... (press Ctrl-C to quit)
1) "subscribe"
2) "messages"
3) (integer) 1



-----------------------------------------


При отправке нового сообщения веб-сервер публикует событие в Redis командой publish channel message:
----------------------------------------------------------------------------------------------------


127.0.0.1:6379> publish messages '{"user_id":55,"message_id":"d1356e62-f33f-412c-b47c-ff107f3e88b1","message_text":"Oh, hi Mark!","sent_at":1642741377}'
(integer) 1



-----------------------------------------


В ответе на команду publish возвращается количество клиентов, получивших опубликованное сообщение.
--------------------------------------------------------------------------------------------------



1) "message"
2) "messages"
3) "{\"user_id\":55,\"message_id\":\"d1356e62-f33f-412c-b47c-ff107f3e88b1\",\"message_text\":\"Oh, hi Mark!\",\"sent_at\":1642741377}"




-------------------------------------------------------------------------------------------------------------------------------------------------------------------------







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------
redis key value storage | | exists, set, get
--------------------------------------------


> exists session:abc
> set session:abc 245
> get session:abc




-------------------------------------------------------------------------------------------------------------------------------------------------------------------------







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

---------------------------------------------
redis cach | | ex, px, ttl, pttl, set, expire
---------------------------------------------


> set user:33:deals_count 5 ex 120
> ttl user:33:deals_count

> set user:33:deals_count 5 px 10000
> pttl user:33:deals_count

> expire user:33:deals_count 300
> ttl user:33:deals_count

> del user:33:deals_count

> unlink user:1:deals_count user:2:deals_count user:3:deals_count

> set user:788:last_viewed_item 29
> expire user:788:last_viewed_item 300
> set user:1024:last_viewed_item 56 px 300000
> ttl user:788:last_viewed_item
> pttl user:788:last_viewed_item





-------------------------------------------------------------------------------------------------------------------------------------------------------------------------







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
redis increment and decrement | | incr, incrby, decr, decrby, get, expire, ttl, del
-----------------------------------------------------------------------------------


> incr page:hexlet.io/courses:online_count
> incrby page:hexlet.io/courses:online_count 27

> decr page:hexlet.io/courses:online_count
> decrby page:hexlet.io/courses:online_count 19

> get page:hexlet.io/courses:online_count
> expire page:hexlet.io/courses:online_count 60

> ttl page:hexlet.io/courses:online_count
> del page:hexlet.io/courses:online_count




---




INSERT INTO visits (url, count, date) 
VALUES ('hexlet.io/courses', 1, '2022-01-01') 
ON DUPLICATE KEY UPDATE count = count + 1




---



------------------------------------------

ID        URL       COUNT       DATE

------------------------------------------
1         x.com     123         2022-01-01
------------------------------------------
2         y.io      65          2023-02-12
------------------------------------------




---




> incr page:250:online
> incrby page:250:online 30
> decrby page:250:online 20
> decr page:250:online





-------------------------------------------------------------------------------------------------------------------------------------------------------------------------







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------
redis lists storage | | lpush, rpush, lrange, lpop, rpop, lrem
--------------------------------------------------------------


> lpush user:14:recent_posts 10
> lpush user:14:recent_posts 20 30

> lrange key start_index stop_index
> lrange user:14:recent_posts 0 -1

> lpop user:14:recent_posts
> rpop user:14:recent_posts

> lrem user:14:recent_posts 0 120
> lrem user:14:recent_posts 0 20

> expire user:14:recent_posts 3600
> ttl user:14:recent_posts


> lpush user:50:last_tweets 10 20 30 40 50
> lrange user:50:last_tweets 0 -1
> rpop user:50:last_tweets
> lpush user:50:last_tweets 60
> lrange user:50:last_tweets 0 -1







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------
redis complex structures with Hashes | | set, hset, hget, hgetall
-----------------------------------------------------------------


> set user:56:email user@test.com
> set user:56:phone '+7-111-111-11-11'

> set user:56:profile '{"email":"user@test.com","phone":"+7-111-111-11-11"}'


> hset key field value
> hset translates:hello en hello ru привет
> hset translates:bye en bye ru пока
> hset translates:name en name ru имя
> hset translates:hello ru здравствуйте

> hget translates:hello ru
> hgetall translates:name


> hdel key field
> hdel translates:bye ru
> hgetall translates:bye


> hset user:100 email tester@gmail.com phone +71234567890 sign_up_date 2022-02-02
> hget user:100 phone
> hset user:100 email developer@gmail.com
> hgetall user:100






-------------------------------------------------------------------------------------------------------------------------------------------------------------------------







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------
redis uniqness validation with Sets | | set, exists, keys, lpush, llen, hset, hlen, sadd, scard, sismember, srem, smembers, sinter
----------------------------------------------------------------------------------------------------------------------------------


> set page:/courses:user:22 1
> set page:/courses:user:33 1
> exists page:/courses:user:22
> keys page:/courses:user:*


> lpush page:/courses 22 33 44
> llen page:/courses


> hset page:/courses 11 1 22 1 33 1
> hlen page:/courses


> sadd key member
> sadd page:/courses 11 22 33 44
> sadd page:/courses 22

> scard key
> scard page:/courses

> sismember key member
> sismember page:/courses 33
> sismember page:/courses 12222

> srem key member
> srem page:/courses 44
> smembers page:/courses

> sinter key
> sadd page:/courses 1 2 3 4 5 6 7 8 9 10
> sadd page:/courses/java 1 2 3 4 5 6 7
> sadd page:/courses/php 5 6 7 8 9
> sinter page:/courses page:/courses/java page:/courses/php


> sadd content:filters bad_word

> sadd content:filters drugs
> sadd content:filters:post:50 what a wonderful day
> sinter content:filters content:filters:post:50
> sadd content:filters murder cat bitcoin drugs
> sadd content:filters:post:100 my cat is broken
> sinter content:filters content:filters:post:100
> srem content:filters cat
> scard content:filters







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------
redis rates with Sorted Sets | | zadd, zincrby, zrange, REV, WITHSCORES
-----------------------------------------------------------------------


leaderboard
-----------

------------------------------------------------

place       name      id        $

------------------------------------------------
1           John      [id:55]   $100500
------------------------------------------------
2           Nina      [id:22]   $500
------------------------------------------------
3           David     [id:33]   $100
------------------------------------------------



> zadd key score member

> zadd leaderboard 100500 55
> zadd leaderboard 500 22
> zadd leaderboard 100 33

> zincrby key increment member
> zincrby leaderboard 500 22

> zrange key min max

> zrange leaderboard 0 2 REV
> zrange leaderboard 0 2 REV WITHSCORES

> zadd post:100:answers 0 10 0 20 0 30
> zincrby post:100:answers 5 10
> zincrby post:100:answers -3 30
> zrevrange post:100:answers 0 -1 WITHSCORES









-------------------------------------------------------------------------------------------------------------------------------------------------------------------------







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------
redis uniqness validation with HyperLogLog | | sadd, sinter, pfadd, pfmerge, pfcount
------------------------------------------------------------------------------------


> sadd article:1 220.6.122.77 35.64.194.82 38.175.235.3
> sadd article:2 220.6.122.77 140.45.246.108
> sinter article:1 article:2


> pfadd key

> pfadd article:1 4.218.89.25 255.194.94.209 81.64.119.92 226.110.217.208 68.199.143.222
> pfadd article:2 14.193.144.176 132.231.108.228 81.64.119.92 226.110.217.208 68.199.143.222
> pfadd article:3 4.218.89.25 255.194.94.209 81.64.119.92 225.109.160.131 85.83.185.103

> pfadd article:1 4.218.89.25

> pfmerge destkey sourcekey

> pfmerge articles article:1 article:2 article:3
> pfcount articles


> pfadd search:words:australia what is a difference between signup and sign up
> pfadd search:words:usa what is the time in moscow just now
> pfcount search:words:usa
> pfcount search:words:australia
> pfadd search:words:usa how to get free nft
> pfmerge search:words search:words:usa search:words:australia
> pfcount search:words









-------------------------------------------------------------------------------------------------------------------------------------------------------------------------







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------
redis messages broker | | rpush, lrange, blpop, blmove
------------------------------------------------------


> rpush queue:order:mail_notification '{"user_id":33,"order_id":12345}'
> rpush queue:order:processing '{"user_id":33,"order_id":12345}'

> lrange queue:order:mail_notification 0 -1
> lrange queue:order:processing 0 -1

> blpop key timeout

> blpop queue:order:mail_notification 10
> blpop queue:order:processing 10


> blmove source destination LEFT|RIGHT LEFT|RIGHT timeout
> rpush queue:order:mail_notification '{"user_id":33,"order_id":12345}'
> blmove queue:order:mail_notification queue:order:mail_notification:fallback LEFT RIGHT 10

> rpush queue:emails {"email":"nikko@gmail.com","text":"Your payment has been proceeded successfully"}
> rpush queue:emails {"email":"johndoe@rambler.com","text":"Password has been changed"}


> blpop queue:emails 0
> blpop queue:emails 0








-------------------------------------------------------------------------------------------------------------------------------------------------------------------------







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------
redis realtime chat with Redis PubSub | | subscribe, publish
------------------------------------------------------------



> subscribe channel

> subscribe messages

> publish channel message

> publish messages '{"user_id":55,"message_id":"d1356e62-f33f-412c-b47c-ff107f3e88b1","message_text":"Oh, hi Mark!","sent_at":1642741377}'

> publish websocket '{"user_id":128,"event_id":200,"payload":{"message":"How r u?"}}'
> publish websocket '{"user_id":22,"event_id":200,"payload":{"message":"Im doing great, thanks!"}}'
> subscribe websocket







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------







-------------------------------------------------------------------------------------------------------------------------------------------------------------------------


























































